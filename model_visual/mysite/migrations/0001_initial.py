# Generated by Django 3.2.2 on 2021-09-09 06:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='binning_task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binning_task_name', models.CharField(default='', max_length=1000, verbose_name='分箱任务名')),
                ('task_status', models.IntegerField(default=None, verbose_name='任务训练状态')),
                ('task_start', models.DateTimeField(default=None, verbose_name='开始时间')),
                ('task_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='结束时间')),
                ('last_modified', models.DateTimeField(blank=True, default=None, null=True, verbose_name='上次编辑时间')),
                ('training_label', models.CharField(default='', max_length=1000, verbose_name='训练的Label')),
                ('train_ratio', models.FloatField(default=70, verbose_name='测试集与训练集比例')),
                ('random_state', models.IntegerField(default=None, verbose_name='划分的随机种子')),
                ('task_error_log', models.CharField(default='', max_length=1000, verbose_name='训练错误信息')),
                ('pkl_file_url', models.CharField(default='', max_length=100, verbose_name='pkl文件保存url')),
            ],
        ),
        migrations.CreateModel(
            name='data_set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_name', models.CharField(max_length=100, verbose_name='数据集名称')),
                ('data_upload_date', models.DateField(verbose_name='上传时间')),
                ('data_desc', models.CharField(max_length=100, verbose_name='数据集描述')),
                ('data_feature_nums', models.IntegerField(verbose_name='特征数')),
                ('data_sample_nums', models.IntegerField(verbose_name='样本数')),
                ('data_url', models.CharField(max_length=100, verbose_name='数据集存放的URL')),
                ('data_file_size', models.FloatField(verbose_name='文件大小')),
                ('data_file_name', models.CharField(default='', max_length=100, verbose_name='数据文件名')),
                ('data_label', models.CharField(default='', max_length=100, verbose_name='数据预测标签列的列名')),
                ('if_one_hot_finish', models.BooleanField(default=False, verbose_name='one-hot编码文件是否生成完成')),
                ('special_code', models.CharField(default='', max_length=100, verbose_name='缺失值标记')),
            ],
        ),
        migrations.CreateModel(
            name='model_class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100, verbose_name='模型名')),
            ],
        ),
        migrations.CreateModel(
            name='task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_if_linear', models.BooleanField(default=False, verbose_name='是否线性模型')),
                ('task_name', models.CharField(default='', max_length=100, verbose_name='任务名')),
                ('task_desc', models.CharField(default='', max_length=100, verbose_name='模型运行描述')),
                ('task_start', models.DateTimeField(verbose_name='开始时间')),
                ('task_end', models.DateTimeField(default=None, verbose_name='结束时间')),
                ('task_status', models.IntegerField(default=0, verbose_name='训练状态')),
                ('model_run_train_test_split', models.FloatField(verbose_name='测试集与训练集比例')),
                ('model_run_random_state', models.IntegerField(default=None, verbose_name='随机种子')),
                ('task_error_log', models.CharField(default='', max_length=1000, verbose_name='训练错误信息')),
                ('generated_dataset_id', models.IntegerField(default=-1, verbose_name='如果使用的衍生数据集则保存衍生数据集ID，否则-1')),
                ('related_binning_task', models.IntegerField(default=None, verbose_name='相关的分箱任务，只有score_card类任务这个字段为非None')),
                ('data_set_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.data_set', verbose_name='所属数据集ID')),
                ('model_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.model_class', verbose_name='所用模型ID')),
            ],
        ),
        migrations.CreateModel(
            name='linear_task_result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_result_str', models.CharField(default='', max_length=10000, verbose_name='任务结果字符串')),
                ('task_result_url', models.CharField(default='', max_length=1000, verbose_name='任务结果url')),
                ('accuracy', models.FloatField(default=-1, verbose_name='准确率')),
                ('precision', models.FloatField(default=-1, verbose_name='正确率')),
                ('recall', models.FloatField(default=-1, verbose_name='召回率')),
                ('f1_score', models.FloatField(default=-1, verbose_name='F1分数')),
                ('auc_plot_url', models.CharField(default='', max_length=1000, verbose_name='AUC图像存储URL')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.task', verbose_name='所属任务ID')),
            ],
        ),
        migrations.CreateModel(
            name='generate_data_set_task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generate_data_set_name', models.CharField(max_length=100, verbose_name='衍生数据集名称')),
                ('generate_type', models.CharField(max_length=100, verbose_name='衍生类型')),
                ('url', models.CharField(default='', max_length=100, verbose_name='衍生数据集存储的地址url')),
                ('generate_status', models.IntegerField(default=0, verbose_name='生成状态')),
                ('mono', models.CharField(default='', max_length=1000, verbose_name='单调性')),
                ('binning_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.binning_task', verbose_name='参考的分箱结果')),
                ('data_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.data_set', verbose_name='原数据集')),
            ],
        ),
        migrations.CreateModel(
            name='data_set_bin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=100, verbose_name='特征名')),
                ('bin_result', models.CharField(default='', max_length=1000, verbose_name='分箱情况')),
                ('data_set_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.data_set', verbose_name='所属数据集ID')),
            ],
        ),
        migrations.AddField(
            model_name='binning_task',
            name='data_set_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.data_set', verbose_name='所属数据集ID'),
        ),
        migrations.CreateModel(
            name='binning_feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=100, verbose_name='特征名')),
                ('bin_num', models.IntegerField(default=None, verbose_name='分箱数目')),
                ('which_bin', models.IntegerField(default=None, verbose_name='第几个分箱')),
                ('this_bin_str', models.CharField(default='', max_length=100, verbose_name='当前分箱的分箱名')),
                ('count', models.IntegerField(default=0, verbose_name='该分箱内的样本数')),
                ('count_percent', models.FloatField(default=0, verbose_name='占总样本')),
                ('non_event_num', models.IntegerField(default=0, verbose_name='分箱内好样本数')),
                ('event_num', models.IntegerField(default=0, verbose_name='分箱内坏样本数')),
                ('event_rate', models.FloatField(default=0, verbose_name='坏样本比例')),
                ('woe', models.FloatField(default=0, verbose_name='WoE值')),
                ('this_iv', models.FloatField(default=0, verbose_name='IV值')),
                ('total_iv', models.FloatField(default=0, verbose_name='该特征的IV值')),
                ('is_special_values', models.BooleanField(default=False, verbose_name='是否是特殊值分箱')),
                ('breaks', models.CharField(default='', max_length=100, verbose_name='当前分箱的分箱名')),
                ('binning_task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.binning_task', verbose_name='所属分箱任务ID')),
                ('data_set_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.data_set', verbose_name='所属数据集ID')),
            ],
        ),
    ]
